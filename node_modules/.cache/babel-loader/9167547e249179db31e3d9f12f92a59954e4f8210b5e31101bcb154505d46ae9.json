{"ast":null,"code":"var _jsxFileName = \"C:\\\\Veterans Center\\\\veteran-app\\\\frontend\\\\src\\\\components\\\\checklist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Search from './searchfunction';\nimport './checklist.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst benefits = ['GI Bill', 'Chapter 30', 'Chapter 31 VocRehab (must have authorization from VocRehab Counselor)', 'Chapter 33 Post 9/11 (must submit a COE)', 'Chapter 35', 'Fed TA', 'State TA', 'Missouri Returning Heroes (must have DD214 on file or supporting documentation submitted to UMSL Veterans Center)'];\nconst requiredDocsMapping = {\n  'GI Bill': ['COE', 'Enrollment Manager', 'Schedule'],\n  'Chapter 30': ['COE', 'Enrollment Manager', 'Schedule'],\n  'Chapter 31 VocRehab (must have authorization from VocRehab Counselor)': ['Authorization from VocRehab Counselor', 'Enrollment Manager', 'Schedule'],\n  'Chapter 33 Post 9/11 (must submit a COE)': ['COE', 'Enrollment Manager', 'Schedule'],\n  'Chapter 35': ['COE', 'Enrollment Manager', 'Schedule'],\n  'Fed TA': ['TAR', 'Enrollment Manager', 'Schedule'],\n  'State TA': ['Award Letter', 'Enrollment Manager', 'Schedule'],\n  'Missouri Returning Heroes (must have DD214 on file or supporting documentation submitted to UMSL Veterans Center)': ['DD214', 'Enrollment Manager', 'Schedule']\n};\nconst SecurePage = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // Function to fetch data from the server\n  const fetchData = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/api/data/scan');\n      const result = await response.json();\n      setData(result);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  // Load data on component mount\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Filter data based on search term\n  const filteredData = data.filter(item => {\n    const fullName = item[\"Last Name, First Name (Legal Name)\"];\n    if (!fullName) return false;\n    const [lastName, firstName] = fullName.split(',').map(name => name.trim());\n    const displayName = `${firstName} ${lastName}`;\n    return displayName.toLowerCase().startsWith(searchTerm.toLowerCase());\n  });\n\n  // Get required documents based on benefits\n  const getRequiredDocs = benefitString => {\n    // Check if benefitString is a string\n    if (typeof benefitString !== 'string') {\n      return 'No required documents'; // Return appropriate message if not a string\n    }\n    const benefitsArray = benefitString.split(';').map(b => b.trim());\n    const requiredDocsSet = new Set();\n    for (const benefit of benefitsArray) {\n      const normalizedBenefit = benefit.trim();\n\n      // Check for each benefit in the mapping\n      if (requiredDocsMapping[normalizedBenefit]) {\n        requiredDocsMapping[normalizedBenefit].forEach(doc => requiredDocsSet.add(doc));\n      } else {\n        // Attempt to match base benefits\n        const baseBenefit = normalizedBenefit.split(' (')[0].trim();\n        if (requiredDocsMapping[baseBenefit]) {\n          requiredDocsMapping[baseBenefit].forEach(doc => requiredDocsSet.add(doc));\n        }\n      }\n    }\n\n    // Return required documents as a comma-separated string\n    return requiredDocsSet.size > 0 ? Array.from(requiredDocsSet).join(', ') : 'No required documents';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"secure-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://i.imgur.com/YIChrEK.png\",\n        alt: \"Company Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to the Secure Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click the \\\"Scan\\\" button to display data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        searchTerm: searchTerm,\n        setSearchTerm: setSearchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), filteredData.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"red-header\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"red-header\",\n              children: \"Student ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"red-header\",\n              children: \"Benefit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"red-header\",\n              children: \"Required Docs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredData.map((item, index) => {\n            const fullName = item[\"Last Name, First Name (Legal Name)\"] || 'Unknown';\n            const [lastName, firstName] = fullName.split(',').map(name => name.trim());\n            const displayName = `${firstName} ${lastName}`;\n            const benefits = item[\"Benefit you plan to utilize this term (check all that apply):\"] || '';\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: displayName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item[\"Student ID # (This is NOT your Social Security Number or SSO ID)\"] || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: benefits\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: getRequiredDocs(benefits)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No veterans matching search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(SecurePage, \"zgNyYy1TkiezW0+CeS6joFMEyrM=\");\n_c = SecurePage;\nexport default SecurePage;\nvar _c;\n$RefreshReg$(_c, \"SecurePage\");","map":{"version":3,"names":["React","useState","useEffect","Search","jsxDEV","_jsxDEV","benefits","requiredDocsMapping","SecurePage","_s","data","setData","searchTerm","setSearchTerm","fetchData","response","fetch","result","json","error","console","filteredData","filter","item","fullName","lastName","firstName","split","map","name","trim","displayName","toLowerCase","startsWith","getRequiredDocs","benefitString","benefitsArray","b","requiredDocsSet","Set","benefit","normalizedBenefit","forEach","doc","add","baseBenefit","size","Array","from","join","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","length","index","_c","$RefreshReg$"],"sources":["C:/Veterans Center/veteran-app/frontend/src/components/checklist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'; \r\nimport Search from './searchfunction'; \r\nimport './checklist.css'; \r\n\r\nconst benefits = [\r\n    'GI Bill', 'Chapter 30', 'Chapter 31 VocRehab (must have authorization from VocRehab Counselor)', 'Chapter 33 Post 9/11 (must submit a COE)', 'Chapter 35',\r\n    'Fed TA', 'State TA', 'Missouri Returning Heroes (must have DD214 on file or supporting documentation submitted to UMSL Veterans Center)'\r\n];\r\n\r\nconst requiredDocsMapping = {\r\n    'GI Bill': ['COE', 'Enrollment Manager', 'Schedule'],\r\n    'Chapter 30': ['COE', 'Enrollment Manager', 'Schedule'],\r\n    'Chapter 31 VocRehab (must have authorization from VocRehab Counselor)': ['Authorization from VocRehab Counselor', 'Enrollment Manager', 'Schedule'],\r\n    'Chapter 33 Post 9/11 (must submit a COE)': ['COE', 'Enrollment Manager', 'Schedule'],\r\n    'Chapter 35': ['COE', 'Enrollment Manager', 'Schedule'],\r\n    'Fed TA': ['TAR', 'Enrollment Manager', 'Schedule'],\r\n    'State TA': ['Award Letter', 'Enrollment Manager', 'Schedule'],\r\n    'Missouri Returning Heroes (must have DD214 on file or supporting documentation submitted to UMSL Veterans Center)': ['DD214', 'Enrollment Manager', 'Schedule'],\r\n};\r\n\r\nconst SecurePage = () => {\r\n    const [data, setData] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    // Function to fetch data from the server\r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:3000/api/data/scan');\r\n            const result = await response.json();\r\n            setData(result);\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        }\r\n    };\r\n\r\n    // Load data on component mount\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    // Filter data based on search term\r\n    const filteredData = data.filter((item) => {\r\n        const fullName = item[\"Last Name, First Name (Legal Name)\"];\r\n        if (!fullName) return false;\r\n\r\n        const [lastName, firstName] = fullName.split(',').map(name => name.trim());\r\n        const displayName = `${firstName} ${lastName}`;\r\n\r\n        return displayName.toLowerCase().startsWith(searchTerm.toLowerCase());\r\n    });\r\n\r\n    // Get required documents based on benefits\r\n    const getRequiredDocs = (benefitString) => {\r\n        // Check if benefitString is a string\r\n        if (typeof benefitString !== 'string') {\r\n            return 'No required documents'; // Return appropriate message if not a string\r\n        }\r\n    \r\n        const benefitsArray = benefitString.split(';').map(b => b.trim());\r\n        const requiredDocsSet = new Set();\r\n    \r\n        for (const benefit of benefitsArray) {\r\n            const normalizedBenefit = benefit.trim();\r\n    \r\n            // Check for each benefit in the mapping\r\n            if (requiredDocsMapping[normalizedBenefit]) {\r\n                requiredDocsMapping[normalizedBenefit].forEach(doc => requiredDocsSet.add(doc));\r\n            } else {\r\n                // Attempt to match base benefits\r\n                const baseBenefit = normalizedBenefit.split(' (')[0].trim();\r\n                if (requiredDocsMapping[baseBenefit]) {\r\n                    requiredDocsMapping[baseBenefit].forEach(doc => requiredDocsSet.add(doc));\r\n                }\r\n            }\r\n        }\r\n    \r\n        // Return required documents as a comma-separated string\r\n        return requiredDocsSet.size > 0 ? Array.from(requiredDocsSet).join(', ') : 'No required documents';\r\n    };\r\n    return (\r\n        <div className=\"secure-page\">\r\n            <div className=\"content\">\r\n                <img src=\"https://i.imgur.com/YIChrEK.png\" alt=\"Company Logo\" />\r\n                <h1>Welcome to the Secure Page</h1>\r\n                <p>Click the \"Scan\" button to display data.</p>\r\n\r\n                {/* Search component */}\r\n                <Search searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\r\n\r\n                {filteredData.length > 0 ? (\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"red-header\">Name</th>\r\n                                <th className=\"red-header\">Student ID</th>\r\n                                <th className=\"red-header\">Benefit</th>\r\n                                <th className=\"red-header\">Required Docs</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {filteredData.map((item, index) => {\r\n                                const fullName = item[\"Last Name, First Name (Legal Name)\"] || 'Unknown';\r\n                                const [lastName, firstName] = fullName.split(',').map(name => name.trim());\r\n                                const displayName = `${firstName} ${lastName}`;\r\n                                const benefits = item[\"Benefit you plan to utilize this term (check all that apply):\"] || '';\r\n\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td>{displayName}</td>\r\n                                        <td>{item[\"Student ID # (This is NOT your Social Security Number or SSO ID)\"] || 'N/A'}</td>\r\n                                        <td>{benefits}</td>\r\n                                        <td>{getRequiredDocs(benefits)}</td>\r\n                                    </tr>\r\n                                );\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                ) : (\r\n                    <p>No veterans matching search</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SecurePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}